"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1299],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return h}});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function o(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):o(o({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(r),h=i,g=p["".concat(s,".").concat(h)]||p[h]||m[h]||a;return r?t.createElement(g,o(o({ref:n},u),{},{components:r})):t.createElement(g,o({ref:n},u))}));function h(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var c=2;c<a;c++)o[c]=r[c];return t.createElement.apply(null,o)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},6537:function(e,n,r){r.r(n),r.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var t=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={sidebar_position:4},s="Config",c={unversionedId:"job_resources/animalfarm/config",id:"job_resources/animalfarm/config",title:"Config",description:"Config file overview.",source:"@site/docs/job_resources/animalfarm/config.md",sourceDirName:"job_resources/animalfarm",slug:"/job_resources/animalfarm/config",permalink:"/job_resources/animalfarm/config",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"docs",previous:{title:"FAQ",permalink:"/job_resources/animalfarm/faq"},next:{title:"Golf",permalink:"/category/golf"}},u={},m=[],p={toc:m};function h(e){var n=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"config"},"Config"),(0,a.kt)("p",null,"Config file overview."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="farm/source-files/shared/shared-config.ts"',title:'"farm/source-files/shared/shared-config.ts"'},"import { RGBA } from './shared-types';\nimport { Vector3Mp } from './vector3';\n\n/** Reduce or increase this, to globally change the loot, upgrade and every other prices. */\nexport const priceMultiplier = 1.0;\n\nexport const SharedConfig = {\n    QueryDebugger: false, // Enable or disable query debugger. You can see the query counts by rows, etc.\n    DoorManager: {\n        StreamRange: 5, // Increase / Reduce this if you want it to be rendered more closer or far. [PERFORMANCE]\n        EnterRange: 1.5, // Enter / Exit Player Range.\n        EnterKey: 38, // Enter / Exit Control key.\n        LockKey: 311, // Locking Control key.\n        LockRange: 2, // Locking Player Range.\n        BuyMenuKey: 20, // Farm buy menu (info panel) open Control key.\n        BuyMenuRange: 2, // Farm buy menu (info panel) Player Range.\n        tickerMS: 1000 // Tick every one sec, to map the closest doors to be rendered. [PERFORMANCE]\n    },\n    AnimalFarm: {\n        MaximumOwnable: 2, // Maximum farm to be owned by a player.\n        InteriorPosition: new Vector3Mp(2000.37, 4831.13, 3.47),\n        WaterTipFillTimeMS: 10000, // Miliseconds to take, to fill a single bucket. (with tip)\n        maximumWater: 150, // Maximum liters in the water trough.\n        fillWithBucket: 20, // How much liter water to fill with a single bucket.\n        maximumFood: 100, // Maximum food in the food trough.\n        fillWithBag: 15, // How much kg. food to fill with a single bag.\n        \n        /**\n         * Generate extra hidden variable. This is a hidden variable, not showed anywhere. With this variable, the animals will not age the same as the other.\n         * Lower the value is better for you.\n         * check *ageDecrease* variable in the tickers. It multiplies it.\n         * So if the extra is 0.6 then age will decrease slower = -2 age / hour then it will become = 2 * 0.6 = 1.2 minus age percentage per hour.\n         * If you do not understand the meaning of this value, do not modify this because you can fuck up many things with it.\n        */\n        extraGenerator: { min: 0.6, max: 1.0 }, \n    },\n    DimensionManager: {\n        DefaultDimension: 0, /** This is routing bucket basically. Set it to your default one. (0 should be) */\n    },\n    Raycast: {\n        refreshMs: 100, // This is MS, reduce this, will become easier to target the entities. (Higher = More Performance) [PERFORMANCE]\n        distance: 10, // Distance to find targets (Measured from the gameplay camera coords, and depends on the which camera you use, if you use the far one, maybe 10 will be small.)\n        spriteSize: 80000, // If you reduce it it will become bigger. Calculate made: Resolution X/Y / spriteSize = drawSprite size. (ex: 1920/80000 = 0.023)\n        spriteDict: 'mphud',\n        spriteName: 'spectating',\n        spriteColor: ({ r: 255, g: 255, b: 255, a: 200 } as RGBA),\n        InteractionKey: 38, // Interaction key with the objects / peds.\n    },\n    Player: {\n        DisabledKeysWhileTool: [21,22,24,25,44,45] // https://docs.fivem.net/docs/game-references/controls/\n    },\n    ObjectManager: {\n        TextDistance: 5, // Increase / Reduce this if you want it to be more closer or far to render the Object texts. (and be added to the @StreamedObjects Map) [PERFORMANCE]\n        tickerMS: 1000 // Tick every one sec, to map the closest objects to be rendered. [PERFORMANCE]\n    },\n    Composter: {\n        maximumWeight: 250, // Maximum composter size\n        shitSpawnChance: 25, // percentage / animal to spawn\n        shitSpawnMs: 60000 * 30, // Spawn ticker interval [PERFORMANCE]\n        maximumShitAmountOnGround: 10, // Maximum shits to be on the ground. / paddock [PERFORMANCE]\n        plusCompostAmount: { min: 2, max: 3 }, // They are dinosaurs, do not worry, these shits are big ok?. Amount to add into the composter, when you collected a shit.\n        pricePerWeight: Math.floor(5 * priceMultiplier) // Price per weight, so if you gain 5kg weight by picking up one shit, you will get 5*5 dollars = $25\n    },\n    Loot: {\n        EggPricePerBox: { min: Math.floor(200 * priceMultiplier), max: Math.floor(250 * priceMultiplier) },\n        MealPricePerBox: { min: Math.floor(8800 * priceMultiplier), max: Math.floor(10000 * priceMultiplier) },\n        MilkPricePerBox: { min: Math.floor(350 * priceMultiplier), max: Math.floor(425 * priceMultiplier) }\n    },\n    Tickers: { // Increasing / Reducing these interval timers, can cause or gain performance for your server performance if you need.\n        TroughsTickerMS: 60000 * 60, // Water & Food trough(s) ticker. It loops through all of the farms->paddocks->troughs [PERFORMANCE]\n        HungerAndThirstMS: 60000 * 60, // Animal reduce effects ticker. It loops through all of the farms->paddocks->animals(& alive) [PERFORMANCE]\n        EggTickerMS: 60000 * 60 * 3 // Egg generate ticker. It loops through all of the farms->paddocks->animals(chicken & alive) [PERFORMANCE]\n    },\n    Animals: {\n        COW: {\n            NAME: 'Cow',\n            IMG: 'cow.svg',\n            DESCRIPTION: 'Product: Milk (gather)\\nWater needs: High\\nFood needs: Medium\\nHealth needs: High\\nLifetime: 14-18 years',\n            PRICE: Math.floor(10000 * priceMultiplier),\n            MODEL: 'a_c_cow',\n            SELL_PRICE: Math.floor(1000 * priceMultiplier),\n\n            minimumMilkToGather: 30,\n\n            milk_HungerMultiplier: 0.01,\n            milk_ThirstMultiplier: 0.03,\n            milk_HealthMultiplier: 0.04,\n            milk_ageMultiplier: 0.04,\n\n            ageDecrease_default: 0.25,\n            ageDecrease_thirstMultiplier: 0.03,\n            ageDecrease_hungerMultiplier: 0.015,\n            ageDecrease_healthMultiplier: 0.04,\n\n            hungerDecreaseAmount: { min: 10, max: 13 }, // How much hunger unit(percentage%) decrease per tick.\n            thirstDecreaseAmount: { min: 15, max: 20 }, // How much thirst unit(percentage%) decrease per tick.\n            \n            hungerIncreaseAmount: 20,\n            thirstIncreaseAmount: 15,\n        },\n        PIG: {\n            NAME: 'Pig',\n            IMG: 'pig.svg',\n            DESCRIPTION: 'Product: Meal (gather)\\nWater needs: Medium\\nFood needs: High\\nHealth needs: Low\\nLifetime: 15-20 years',\n            PRICE: Math.floor(7500 * priceMultiplier),\n            MODEL: 'a_c_pig',\n            SELL_PRICE: Math.floor(2750 * priceMultiplier),\n\n            weight_HungerMultiplier: 0.006,\n            weight_ThirstMultiplier: 0.003,\n            weight_HealthMultiplier: 0.0025,\n            weight_ageMultiplier: 0.0025,\n\n            ageDecrease_default: 0.1,\n            ageDecrease_thirstMultiplier: 0.015,\n            ageDecrease_hungerMultiplier: 0.025,\n            ageDecrease_healthMultiplier: 0.01,\n\n            hungerDecreaseAmount: { min: 16, max: 21 }, // How much hunger unit(percentage%) decrease per tick.\n            thirstDecreaseAmount: { min: 10, max: 13 }, // How much thirst unit(percentage%) decrease per tick.\n\n            hungerIncreaseAmount: 25,\n            thirstIncreaseAmount: 17,\n        },\n        CHICKEN: {\n            NAME: 'Chicken',\n            IMG: 'chicken.svg',\n            DESCRIPTION: 'Product: Egg (passive)\\nWater needs: Low\\nFood needs: Low\\nHealth needs: Medium\\nLifetime: 5-8 years',\n            PRICE: Math.floor(1000 * priceMultiplier),\n            MODEL: 'a_c_hen',\n            SELL_PRICE: Math.floor(100 * priceMultiplier),\n\n            egg_HungerMultiplier: 0.1,\n            egg_ThirstMultiplier: 0.1,\n            egg_HealthMultiplier: 0.2,\n            egg_ageMultiplier: 0.05,\n\n            ageDecrease_default: 1.1,\n            ageDecrease_thirstMultiplier: 0.02,\n            ageDecrease_hungerMultiplier: 0.02,\n            ageDecrease_healthMultiplier: 0.03,\n\n            hungerDecreaseAmount: { min: 10, max: 20 }, // How much hunger unit(percentage%) decrease per tick.\n            thirstDecreaseAmount: { min: 10, max: 20 }, // How much thirst unit(percentage%) decrease per tick.\n\n            hungerIncreaseAmount: 10,\n            thirstIncreaseAmount: 15,\n        }\n    }\n};\n")))}h.isMDXComponent=!0}}]);