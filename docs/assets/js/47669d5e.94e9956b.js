"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6023],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=s(r),f=a,b=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return r?n.createElement(b,i(i({ref:t},l),{},{components:r})):n.createElement(b,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9500:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],u={sidebar_position:1},c="\ud83e\udded About",s={unversionedId:"free_resources/fivem_rpc/about",id:"free_resources/fivem_rpc/about",title:"\ud83e\udded About",description:"Github",source:"@site/docs/free_resources/fivem_rpc/about.md",sourceDirName:"free_resources/fivem_rpc",slug:"/free_resources/fivem_rpc/about",permalink:"/free_resources/fivem_rpc/about",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"FiveM RPC",permalink:"/category/fivem-rpc"},next:{title:"Install",permalink:"/free_resources/fivem_rpc/install"}},l={},p=[{value:"Github",id:"github",level:2},{value:"About",id:"about",level:2}],m={toc:p};function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"-about"},"\ud83e\udded About"),(0,o.kt)("h2",{id:"github"},"Github"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/freamee/fivem-rpc"},"https://github.com/freamee/fivem-rpc")),(0,o.kt)("h2",{id:"about"},"About"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Easy server-client communication (ping-pong) between environments.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can easily trigger serverside from your NUI"),(0,o.kt)("li",{parentName:"ul"},"You can create a request to serverside, which will send back the response from server")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Very basic example use case:")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Authentication system")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="FRONTEND, Calling the server"',title:'"FRONTEND,',Calling:!0,the:!0,'server"':!0},'import rpc from "browser.ts"\n\nrpc.callGlobalServer("auth:sendLoginRequest", {\n    username: "freamee",\n    password: "password"\n}).then(res => {\ny    console.log(JSON.stringify(res));\n    // {\n    //     charId = 1\n    //     charName = "Ray Shelby",\n    // },\n    // {\n    //     charId = 2,\n    //     charName = "Ray Washington"\n    // }\n});\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Serverside, register the event and do the auth, then return a response"',title:'"Serverside,',register:!0,the:!0,event:!0,and:!0,do:!0,"auth,":!0,then:!0,return:!0,a:!0,'response"':!0},'exports["fivem-rpc"]:registerGlobal("auth:sendLoginRequest", function(d)\n    local username = d.username\n    local password = d.password\n\n    -- Do the authentication methods\n\n    -- Return a value, maybe return his character names and ids if you have a multiple character system.\n    return {\n        {\n            charId = 1\n            charName = "Ray Shelby",\n        },\n        {\n            charId = 2,\n            charName = "Ray Washington"\n        }\n    }\nend)\n')))}f.isMDXComponent=!0}}]);