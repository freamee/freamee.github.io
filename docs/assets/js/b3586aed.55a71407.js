"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6127],{3905:function(e,r,n){n.d(r,{Zo:function(){return c},kt:function(){return b}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function u(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=t.createContext({}),l=function(e){var r=t.useContext(s),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},c=function(e){var r=l(e.components);return t.createElement(s.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(n),b=a,f=p["".concat(s,".").concat(b)]||p[b]||m[b]||o;return n?t.createElement(f,i(i({ref:r},c),{},{components:n})):t.createElement(f,i({ref:r},c))}));function b(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var u={};for(var s in r)hasOwnProperty.call(r,s)&&(u[s]=r[s]);u.originalType=e,u.mdxType="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=n[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},1243:function(e,r,n){n.r(r),n.d(r,{assets:function(){return c},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return m}});var t=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],u={sidebar_position:5},s="Utils",l={unversionedId:"free_resources/aquiver_api_lua/utils",id:"free_resources/aquiver_api_lua/utils",title:"Utils",description:"Shared",source:"@site/docs/free_resources/aquiver_api_lua/utils.md",sourceDirName:"free_resources/aquiver_api_lua",slug:"/free_resources/aquiver_api_lua/utils",permalink:"/free_resources/aquiver_api_lua/utils",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docs",previous:{title:"Event manager",permalink:"/free_resources/aquiver_api_lua/eventmanager"},next:{title:"Attachments",permalink:"/free_resources/aquiver_api_lua/attachments"}},c={},m=[{value:"Shared",id:"shared",level:2},{value:"Server",id:"server",level:2},{value:"Client",id:"client",level:2}],p={toc:m};function b(e){var r=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"utils"},"Utils"),(0,o.kt)("h2",{id:"shared"},"Shared"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"--- Print to console (ERROR)\n---@param content table|string|boolean|number\n---@param toJSON? boolean\nShared.Utils.Print:Error(content, toJSON)\n\n--- Print to console (ERROR)\n---@param content table|string|boolean|number\n---@param toJSON? boolean\nShared.Utils.Print:Debug(content, toJSON)\n\nShared.Utils:RoundNumber(num, decimals)\n")),(0,o.kt)("h2",{id:"server"},"Server"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"--- Calculate and return new position after offsets are applied with heading\n---@param vec3 { x:number; y:number; z:number }\n---@param heading number\n---@param oX number\n---@param oY number\n---@param oZ number\nServer.Utils:GetOffsetFromVector3(vec3, heading, oX, oY, oZ)\n\n-- Check if there any global message coming from the API.\nServer.Utils:checkGlobalMessage()\n\n--- Check current resource version. (Invoked resource)\nServer.Utils:checkResourceVersion()\n")),(0,o.kt)("h2",{id:"client"},"Client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"--- Render sprite on screen, it transforms the 3d vector to screen coordinates and renders it.\n---@param worldX number\n---@param worldY number\n---@param worldZ number\n---@param textureDict string\n---@param textureName string\n---@param scale number\n---@param r number\n---@param g number\n---@param b number\n---@param a number\n---@async\nClient.Utils:DrawSprite3D(worldX, worldY, worldZ, textureDict, textureName, scale, r, g, b, a)\n\n--- Render sprite on a 2d Vector screen coordinates\n---@param screenX number\n---@param screenY number\n---@param textureDict string\n---@param textureName string\n---@param scale number\n---@param rotation number\n---@param r number\n---@param g number\n---@param b number\n---@param a number\n---@async\nClient.Utils:DrawSprite2D(screenX, screenY, textureDict, textureName, scale, rotation, r, g, b, a)\n\n--- Request model.\n---@param modelHash string\n---@async\nClient.Utils:RequestModel(modelHash)\n\n---@param x number\n---@param y number\n---@param z number\n---@param text string\n---@param size? number Default: 0.25\n---@param font? number Default: 0\nClient.Utils:DrawText3D(x, y, z, text, size, font)\n\n---@param x number\n---@param y number\n---@param text string\n---@param size? number Default: 0.25\n---@param font? number Default: 0\nClient.Utils:DrawText2D(x, y, text, size, font)\n")))}b.isMDXComponent=!0}}]);