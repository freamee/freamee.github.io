"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7841],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),b=a,f=p["".concat(s,".").concat(b)]||p[b]||d[b]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8803:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={sidebar_position:2},s="Usage",c={unversionedId:"free_resources/object_controller/usage",id:"free_resources/object_controller/usage",title:"Usage",description:"How to use this script?",source:"@site/docs/free_resources/object_controller/usage.md",sourceDirName:"free_resources/object_controller",slug:"/free_resources/object_controller/usage",permalink:"/free_resources/object_controller/usage",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docs",previous:{title:"About",permalink:"/free_resources/object_controller/about"}},u={},d=[{value:"Spawning object(s)",id:"spawning-objects",level:2},{value:"Setting &amp; Getting variables (shared &amp; server)",id:"setting--getting-variables-shared--server",level:2},{value:"Shared event listeners (server &amp; client)",id:"shared-event-listeners-server--client",level:2},{value:"OnObjectClicked",id:"onobjectclicked",level:3},{value:"OnObjectVariableChange",id:"onobjectvariablechange",level:3},{value:"Export functions",id:"export-functions",level:2},{value:"Serverside",id:"serverside",level:3},{value:"Clientside",id:"clientside",level:3},{value:"Render Function Pool",id:"render-function-pool",level:2},{value:"Whats this?",id:"whats-this",level:3},{value:"Adding functions &amp; examples",id:"adding-functions--examples",level:3},{value:"Object class functions",id:"object-class-functions",level:2}],p={toc:d};function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"usage"},"Usage"),(0,o.kt)("p",null,"How to use this script?"),(0,o.kt)("h2",{id:"spawning-objects"},"Spawning object(s)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Spawning object(s) example code"',title:'"Spawning',"object(s)":!0,example:!0,'code"':!0},"--\x3e ObjectController.create = function(_model, _position, _uid, _options)\n-- _options = {\n--     rotation = vector3,\n--     freezed = boolean,\n--     collision = boolean,\n--     alpha = number,\n--     clickable = boolean,\n--     servervars = table,\n--     sharedvars = table,\n-- }\n\n-- @return {\n--     uid = self.data.uid,\n--     object = ObjectController._store[self.data.uid]\n-- }\n\nlocal o = ObjectController.create('prop_barrel_01a', vector3(-2612, 1870, 167), 'uid-1', {\n    clickable = true\n})\n-- print(o.uid) - @string\n-- print(o.object) - @table\n")),(0,o.kt)("h2",{id:"setting--getting-variables-shared--server"},"Setting & Getting variables (shared & server)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Creating an object then set shared and server variable on it."',title:'"Creating',an:!0,object:!0,then:!0,set:!0,shared:!0,and:!0,server:!0,variable:!0,on:!0,'it."':!0},"local o = ObjectController.create('prop_barrel_01a', vector3(-2612, 1870, 167), 'uid-1', {\n    clickable = true\n})\no.object.setSharedVar('name', 'Shared Variable Example')\no.object.setSharedVar('progress', 5)\no.object.setServerVariable('safe_key', '49fasj384823492898')\n\n-- Getting variables\nlocal name = o.object.getSharedVar('name')\nprint(name) -- @returns 'Shared Variable Example'\nprint(o.object.getServerVar('safe_key')) -- @returns '49fasj384823492898'\n")),(0,o.kt)("h2",{id:"shared-event-listeners-server--client"},"Shared event listeners (server & client)"),(0,o.kt)("h3",{id:"onobjectclicked"},"OnObjectClicked"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"AddEventHandler(Config.Events.object_clicked, function(uid, data)\n    -- On Object Clicked\n    -- print(uid, data)\nend)\n")),(0,o.kt)("h3",{id:"onobjectvariablechange"},"OnObjectVariableChange"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"AddEventHandler(Config.Events.variable_changed, function(uid, key, value)\n    -- On Object Variable Change\n    -- Config.DebugMsg(string.format('Object variable changed: (%s) %s', key, value))\nend)\n")),(0,o.kt)("h2",{id:"export-functions"},"Export functions"),(0,o.kt)("h3",{id:"serverside"},"Serverside"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"exports('oc_create', ObjectController.create)\nexports('oc_delete', ObjectController.delete)\nexports('oc_get', ObjectController.get)\nexports('oc_exist', ObjectController.exist)\n")),(0,o.kt)("h3",{id:"clientside"},"Clientside"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"exports('oc_addfunction', FunctionController.add)\nexports('oc_removefunction', FunctionController.remove)\n")),(0,o.kt)("h2",{id:"render-function-pool"},"Render Function Pool"),(0,o.kt)("h3",{id:"whats-this"},"Whats this?"),(0,o.kt)("p",null,"We have a custom thread which triggers every function which is added to this pool.",(0,o.kt)("br",null),"\nWith this, you do not need to always create a for loop with the streamed objects."),(0,o.kt)("h3",{id:"adding-functions--examples"},"Adding functions & examples"),(0,o.kt)("p",null,"If you create a function with the same ",(0,o.kt)("strong",{parentName:"p"},"uid")," then you will receive a console message on clientside and the ",(0,o.kt)("strong",{parentName:"p"},"function remains the old one.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Adding render function"',title:'"Adding',render:!0,'function"':!0},"-- FunctionController.add = function(uid, func)\n\n-- Render out variables\nFunctionController.add('render-names', function(data) -- <-- data always gets called\n    DrawText3D(data.position.x, data.position.y, data.position.z + 1.2, json.encode(data.sharedvars))\nend)\n\n-- Add one more render function (eg. markers)\nFunctionController.add('render-markers', function(data) -- <-- data always gets called\n    local x, y, z = table.unpack(data.position)\n    DrawMarker(2, x, y, z + 1.5, 0.0, 0.0, 0.0, 0.0, 180.0, 0.0, 0.25, 0.25, 0.25, 255, 255, 0, 50, false, true, 2, nil,\n        nil, false)\nend)\n\n-- Delete render function with timeout\nCitizen.CreateThread(function()\n    Citizen.Wait(5000)\n    FunctionController.remove('render-names')\nend)\n")),(0,o.kt)("h2",{id:"object-class-functions"},"Object class functions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},"+ setPosition(_pos: vector3)\n+ setRotation(_rot: vector3)\n+ setFreezed(_state: boolean) -- (Freeze object)\n+ setModel(_model: string) -- (Change object model)\n+ setAlpha(_alpha: number) -- (Set object alpha)\n+ setServerVariable(key: string, value: any)\n+ getServerVar(key: string)\n+ setSharedVar(key: string, value: any)\n+ getSharedVar(key: string)\n+ save (You need to setup it with database etc, the examples are already inside the server.lua file)\n")))}b.isMDXComponent=!0}}]);