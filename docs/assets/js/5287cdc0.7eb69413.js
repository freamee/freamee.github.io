"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7910],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(r),d=a,y=s["".concat(u,".").concat(d)]||s[d]||c[d]||i;return r?n.createElement(y,o(o({ref:t},m),{},{components:r})):n.createElement(y,o({ref:t},m))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=s;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},4937:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={},u=void 0,p={unversionedId:"util_resources/grid_inventory/Server/Inventory/SetMetaData",id:"util_resources/grid_inventory/Server/Inventory/SetMetaData",title:"SetMetaData",description:"Sets the metadata for an item found with the findBy options.",source:"@site/docs/util_resources/grid_inventory/02-Server/01-Inventory/SetMetaData.md",sourceDirName:"util_resources/grid_inventory/02-Server/01-Inventory",slug:"/util_resources/grid_inventory/Server/Inventory/SetMetaData",permalink:"/util_resources/grid_inventory/Server/Inventory/SetMetaData",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"SetMaxWeight",permalink:"/util_resources/grid_inventory/Server/Inventory/SetMaxWeight"},next:{title:"SetNewVehiclePlate",permalink:"/util_resources/grid_inventory/Server/Inventory/SetNewVehiclePlate"}},m={},c=[],s={toc:c};function d(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Sets the metadata for an item found with the findBy options."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"inv: ",(0,i.kt)("inlineCode",{parentName:"li"},"number")," or ",(0,i.kt)("inlineCode",{parentName:"li"},"string")),(0,i.kt)("li",{parentName:"ul"},"findBy: ",(0,i.kt)("inlineCode",{parentName:"li"},"table")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"name? ",(0,i.kt)("inlineCode",{parentName:"li"},"string")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"itemHash? ",(0,i.kt)("inlineCode",{parentName:"li"},"string")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"x? ",(0,i.kt)("inlineCode",{parentName:"li"},"number")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"y? ",(0,i.kt)("inlineCode",{parentName:"li"},"number")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"isWeared? ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"meta? ",(0,i.kt)("inlineCode",{parentName:"li"},"ItemMetaData")))),(0,i.kt)("li",{parentName:"ul"},"metaData: ",(0,i.kt)("inlineCode",{parentName:"li"},"{ [string]: any }"))),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},"inv")," argument can be a number (as player ID) or the inventory uniqueID."),(0,i.kt)("p",null,"Returns the updated ",(0,i.kt)("inlineCode",{parentName:"p"},"InventoryItem"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'exports["avp_grid_inventory"]:SetMetaData(inv, findBy, metaData)\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua",metastring:'title="Example"',title:'"Example"'},'local source = source\nlocal bodyArmourItem = exports["avp_grid_inventory"]:GetItemBy({ isWeared = true, name = "armour" })\nif not bodyArmourItem then return end\n\nbodyArmourItem.meta.durability = 100\nbodyArmourItem.meta.drawable = 20\n\nexports["avp_grid_inventory"]:SetMetaData(source, { itemHash = bodyArmourItem.itemHash }, bodyArmourItem.meta)\n\n')))}d.isMDXComponent=!0}}]);